name: Java CI with Maven

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    
env:
  DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }} 
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
    - name: Grant execute permission for POM file
      run: chmod +x pom.xml    
    - name: Build with Maven
      run: mvn clean package --file pom.xml
    - name: Run Test cases
      run: mvn test --file pom.xml
#    - name: SonarQube Scan
#      uses: sonarsource/sonarqube-scan-action@master
#      env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#    - name: SonarQube Quality Gate check
#      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
#      timeout-minutes: 5
#      env:
#       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Install Datree
      run: curl https://get.datree.io | /bin/bash
        
    - name: Run Datree's policy check
      run: datree test kube.yaml
      
    - name: Create a temp directory
      run: mkdir downloads
      
    - name: Add artifacts to publish to the temp folder
      run: |
         cd downloads
         pwd
         cp /home/runner/work/springboot-githubactions/springboot-githubactions/target/spring-boot-hello-world-1.0.0-SNAPSHOT.jar /home/runner/work/springboot-githubactions/springboot-githubactions/downloads/mapp.jar
         cd ..
         
    - name: Uplad Github Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: new-artifact
        path: downloads
    
    - name: Generate docker image
      uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build --file Dockerfile -t springapp:${{ github.run_number }} .
      
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
#      with:
#        name: anuj23/githubactions
    - name: Publish docker image
      run: docker push anuj23/githubactions springapp:${{ github.run_number }}
